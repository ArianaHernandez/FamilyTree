{"ast":null,"code":"// This is the class and constructor used to create an object with a person's information.\nclass PersonInfo {\n  constructor(id, gender, parents, children, siblings, spouses, bio, imageurl) {\n    this.id = id;\n    this.gender = gender;\n    this.parents = [];\n\n    for (const parent of parents) {\n      this.parents.push({\n        id: parent\n      });\n    }\n\n    this.children = [];\n\n    for (const child of children) {\n      this.children.push({\n        id: child\n      });\n    }\n\n    this.siblings = [];\n\n    for (const sibling of siblings) {\n      this.siblings.push({\n        id: sibling\n      });\n    }\n\n    this.spouses = [];\n\n    for (const spouse of spouses) {\n      this.spouses.push({\n        id: spouse\n      });\n    }\n\n    this.bio = bio;\n  }\n\n}\n\nlet data = [// This is the object that represents you\nnew PersonInfo(\"Izzy\", \"female\", [\"Alexander\", \"Cloe\"], [], [\"Isodora\", \"Alexander II\"], [], \"This is me!\"), // These two objects are your parents\nnew PersonInfo(\"Alexander\", \"male\", [], [\"Izzy\", \"Isodora\", \"Alexander II\"], [], [\"Cloe\"], \"I'm your dad.\"), new PersonInfo(\"Cloe\", \"female\", [], [\"Izzy\", \"Isodora\", \"Alexander II\"], [], [\"Alexander\"], \"I'm your mom.\"), // These objects are your siblings\nnew PersonInfo(\"Isodora\", \"female\", [\"Alexander\", \"Cloe\"], [], [\"Izzy\", \"Alexander II\"], [], \"I'm your sister.\"), new PersonInfo(\"Alexander II\", \"male\", [\"Alexander\", \"Cloe\"], [], [\"Izzy\", \"Isodora\"], [], \"I'm your brother.\")];\nexport default data;","map":{"version":3,"sources":["/workspace/FamilyTree/Family-Tree-Part-Two/src/example_data.js"],"names":["PersonInfo","constructor","id","gender","parents","children","siblings","spouses","bio","imageurl","parent","push","child","sibling","spouse","data"],"mappings":"AAAA;AACA,MAAMA,UAAN,CAAiB;AACfC,EAAAA,WAAW,CAACC,EAAD,EAAKC,MAAL,EAAaC,OAAb,EAAsBC,QAAtB,EAAgCC,QAAhC,EAA0CC,OAA1C,EAAmDC,GAAnD,EAAuDC,QAAvD,EAAiE;AAC1E,SAAKP,EAAL,GAAUA,EAAV;AACA,SAAKC,MAAL,GAAcA,MAAd;AAEA,SAAKC,OAAL,GAAe,EAAf;;AACA,SAAK,MAAMM,MAAX,IAAqBN,OAArB,EAA8B;AAC5B,WAAKA,OAAL,CAAaO,IAAb,CAAkB;AAAET,QAAAA,EAAE,EAAEQ;AAAN,OAAlB;AACD;;AAED,SAAKL,QAAL,GAAgB,EAAhB;;AACA,SAAK,MAAMO,KAAX,IAAoBP,QAApB,EAA8B;AAC5B,WAAKA,QAAL,CAAcM,IAAd,CAAmB;AAAET,QAAAA,EAAE,EAAEU;AAAN,OAAnB;AACD;;AAED,SAAKN,QAAL,GAAgB,EAAhB;;AACA,SAAK,MAAMO,OAAX,IAAsBP,QAAtB,EAAgC;AAC9B,WAAKA,QAAL,CAAcK,IAAd,CAAmB;AAAET,QAAAA,EAAE,EAAEW;AAAN,OAAnB;AACD;;AAED,SAAKN,OAAL,GAAe,EAAf;;AACA,SAAK,MAAMO,MAAX,IAAqBP,OAArB,EAA8B;AAC5B,WAAKA,OAAL,CAAaI,IAAb,CAAkB;AAAET,QAAAA,EAAE,EAAEY;AAAN,OAAlB;AACD;;AAED,SAAKN,GAAL,GAAWA,GAAX;AACD;;AA1Bc;;AA6BjB,IAAIO,IAAI,GAAG,CACT;AACA,IAAIf,UAAJ,CAAe,MAAf,EAAuB,QAAvB,EAAiC,CAAC,WAAD,EAAc,MAAd,CAAjC,EAAwD,EAAxD,EAA4D,CAAC,SAAD,EAAY,cAAZ,CAA5D,EAAyF,EAAzF,EAA6F,aAA7F,CAFS,EAIT;AACA,IAAIA,UAAJ,CAAe,WAAf,EAA4B,MAA5B,EAAoC,EAApC,EAAwC,CAAC,MAAD,EAAS,SAAT,EAAmB,cAAnB,CAAxC,EAA4E,EAA5E,EAAgF,CAAC,MAAD,CAAhF,EAA0F,eAA1F,CALS,EAOT,IAAIA,UAAJ,CAAe,MAAf,EAAuB,QAAvB,EAAiC,EAAjC,EAAqC,CAAC,MAAD,EAAS,SAAT,EAAmB,cAAnB,CAArC,EAAyE,EAAzE,EAA6E,CAAC,WAAD,CAA7E,EAA4F,eAA5F,CAPS,EAST;AACA,IAAIA,UAAJ,CAAe,SAAf,EAA0B,QAA1B,EAAoC,CAAC,WAAD,EAAc,MAAd,CAApC,EAA2D,EAA3D,EAA+D,CAAC,MAAD,EAAS,cAAT,CAA/D,EAAyF,EAAzF,EAA6F,kBAA7F,CAVS,EAWP,IAAIA,UAAJ,CAAe,cAAf,EAA+B,MAA/B,EAAuC,CAAC,WAAD,EAAc,MAAd,CAAvC,EAA8D,EAA9D,EAAkE,CAAC,MAAD,EAAS,SAAT,CAAlE,EAAuF,EAAvF,EAA2F,mBAA3F,CAXO,CAAX;AAcA,eAAee,IAAf","sourcesContent":["// This is the class and constructor used to create an object with a person's information.\nclass PersonInfo {\n  constructor(id, gender, parents, children, siblings, spouses, bio,imageurl) {\n    this.id = id;\n    this.gender = gender;\n\n    this.parents = [];\n    for (const parent of parents) {\n      this.parents.push({ id: parent });\n    }\n\n    this.children = [];\n    for (const child of children) {\n      this.children.push({ id: child });\n    }\n\n    this.siblings = [];\n    for (const sibling of siblings) {\n      this.siblings.push({ id: sibling });\n    }\n\n    this.spouses = [];\n    for (const spouse of spouses) {\n      this.spouses.push({ id: spouse });\n    }\n\n    this.bio = bio;\n  }\n}\n\nlet data = [\n  // This is the object that represents you\n  new PersonInfo(\"Izzy\", \"female\", [\"Alexander\", \"Cloe\"], [], [\"Isodora\", \"Alexander II\"], [], \"This is me!\"),\n\n  // These two objects are your parents\n  new PersonInfo(\"Alexander\", \"male\", [], [\"Izzy\", \"Isodora\",\"Alexander II\"], [], [\"Cloe\"], \"I'm your dad.\"),\n\n  new PersonInfo(\"Cloe\", \"female\", [], [\"Izzy\", \"Isodora\",\"Alexander II\"], [], [\"Alexander\"], \"I'm your mom.\"),\n\n  // These objects are your siblings\n  new PersonInfo(\"Isodora\", \"female\", [\"Alexander\", \"Cloe\"], [], [\"Izzy\", \"Alexander II\"], [], \"I'm your sister.\"),\n    new PersonInfo(\"Alexander II\", \"male\", [\"Alexander\", \"Cloe\"], [], [\"Izzy\", \"Isodora\"], [], \"I'm your brother.\")\n];\n\nexport default data;\n"]},"metadata":{},"sourceType":"module"}